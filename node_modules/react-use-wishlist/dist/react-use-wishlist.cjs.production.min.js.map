{"version":3,"file":"react-use-wishlist.cjs.production.min.js","sources":["../src/useLocalStorage.ts","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nexport default function useLocalStorage(\r\n  key: string,\r\n  initialValue: string\r\n): [string, (value: Function | string) => void] {\r\n  const [storedValue, setStoredValue] = React.useState(() => {\r\n    try {\r\n      const item =\r\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\r\n\r\n      return item ? item : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value: Function | string) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n\r\n      setStoredValue(valueToStore);\r\n\r\n      window.localStorage.setItem(key, valueToStore);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nexport interface Item {\r\n  id: string;\r\n  price: number;\r\n  itemTotal?: number;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface InitialState {\r\n  id: string;\r\n  items: Item[];\r\n  isWishlistEmpty: boolean;\r\n  totalWishlistItems: number;\r\n  wishlistTotal: number;\r\n  metadata?: Metadata;\r\n}\r\n\r\nexport interface Metadata {\r\n  [key: string]: any;\r\n}\r\n\r\ninterface WishlistProviderState extends InitialState {\r\n  addWishlistItem: (item: Item) => void;\r\n  removeWishlistItem: (id: Item[\"id\"]) => void;\r\n  setWishlistItems: (items: Item[]) => void;\r\n  emptyWishlist: () => void;\r\n  getWishlistItem: (id: Item[\"id\"]) => any | undefined;\r\n  inWishlist: (id: Item[\"id\"]) => boolean;\r\n  clearWishlistMetadata: () => void;\r\n  setWishlistMetadata: (metadata: Metadata) => void;\r\n  updateWishlistMetadata: (metadata: Metadata) => void;\r\n}\r\n\r\nexport type Actions =\r\n  | { type: \"SET_ITEMS\"; payload: Item[] }\r\n  | { type: \"ADD_ITEM\"; payload: Item }\r\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\r\n  | { type: \"EMPTY_WISHLIST\" }\r\n  | { type: \"CLEAR_WISHLIST_META\" }\r\n  | { type: \"SET_WISHLIST_META\"; payload: Metadata }\r\n  | { type: \"UPDATE_WISHLIST_META\"; payload: Metadata };\r\n\r\nexport const initialState: any = {\r\n  items: [],\r\n  isWishlistEmpty: true,\r\n  totalWishlistItems: 0,\r\n  wishlistTotal: 0,\r\n  metadata: {},\r\n};\r\n\r\nconst WishlistContext = React.createContext<WishlistProviderState | undefined>(\r\n  initialState\r\n);\r\n\r\nexport const createWishlistIdentifier = (len = 12) =>\r\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\r\n\r\nexport const useWishlist = () => {\r\n  const context = React.useContext(WishlistContext);\r\n\r\n  if (!context) throw new Error(\"Expected to be wrapped in a WishlistProvider\");\r\n\r\n  return context;\r\n};\r\n\r\nfunction reducer(state: WishlistProviderState, action: Actions) {\r\n  switch (action.type) {\r\n    case \"SET_ITEMS\":\r\n      return generateWishlistState(state, action.payload);\r\n\r\n    case \"ADD_ITEM\": {\r\n      var tempItems = state.items;\r\n      tempItems.push(action.payload);\r\n      const items = tempItems;\r\n\r\n      return generateWishlistState(state, items);\r\n    }\r\n\r\n    case \"REMOVE_ITEM\": {\r\n      const items = state.items.filter((i: Item) => i.id !== action.id);\r\n\r\n      return generateWishlistState(state, items);\r\n    }\r\n\r\n    case \"EMPTY_WISHLIST\":\r\n      return initialState;\r\n\r\n    case \"CLEAR_WISHLIST_META\":\r\n      return {\r\n        ...state,\r\n        metadata: {},\r\n      };\r\n\r\n    case \"SET_WISHLIST_META\":\r\n      return {\r\n        ...state,\r\n        metadata: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case \"UPDATE_WISHLIST_META\":\r\n      return {\r\n        ...state,\r\n        metadata: {\r\n          ...state.metadata,\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    default:\r\n      throw new Error(\"No action specified\");\r\n  }\r\n}\r\n\r\nconst generateWishlistState = (state = initialState, items: Item[]) => {\r\n  const totalWishlistItems = items.length;\r\n  const isWishlistEmpty = totalWishlistItems === 0;\r\n\r\n  return {\r\n    ...initialState,\r\n    ...state,\r\n    items: calculateItemTotals(items),\r\n    totalWishlistItems,\r\n    wishlistTotal: calculateTotal(items),\r\n    isWishlistEmpty,\r\n  };\r\n};\r\n\r\nconst calculateItemTotals = (items: Item[]) =>\r\n  items.map(item => ({\r\n    ...item,\r\n    itemTotal: item.price,\r\n  }));\r\n\r\nconst calculateTotal = (items: Item[]) =>\r\n  items.reduce((total, item) => total + item.price, 0);\r\n\r\nexport const WishlistProvider: React.FC<{\r\n  children?: React.ReactNode;\r\n  id?: string;\r\n  defaultItems?: Item[];\r\n  onSetItems?: (items: Item[]) => void;\r\n  onItemAdd?: (payload: Item) => void;\r\n  onItemRemove?: (id: Item[\"id\"]) => void;\r\n  storage?: (\r\n    key: string,\r\n    initialValue: string\r\n  ) => [string, (value: Function | string) => void];\r\n  metadata?: Metadata;\r\n}> = ({\r\n  children,\r\n  id: wishlistId,\r\n  defaultItems = [],\r\n  onSetItems,\r\n  onItemAdd,\r\n  onItemRemove,\r\n  storage = useLocalStorage,\r\n  metadata,\r\n}) => {\r\n  const id = wishlistId ? wishlistId : createWishlistIdentifier();\r\n\r\n  const [savedWishlist, saveWishlist] = storage(\r\n    wishlistId ? `react-use-wishlist-${id}` : `react-use-wishlist`,\r\n    JSON.stringify({\r\n      id,\r\n      ...initialState,\r\n      items: defaultItems,\r\n      metadata,\r\n    })\r\n  );\r\n\r\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedWishlist));\r\n  React.useEffect(() => {\r\n    saveWishlist(JSON.stringify(state));\r\n  }, [state, saveWishlist]);\r\n\r\n  const setWishlistItems = (items: Item[]) => {\r\n    dispatch({\r\n      type: \"SET_ITEMS\",\r\n      payload: items.map(item => (item)),\r\n    });\r\n\r\n    onSetItems && onSetItems(items);\r\n  };\r\n\r\n  const addWishlistItem = (item: Item) => {\r\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\r\n\r\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\r\n\r\n    if (currentItem)\r\n      throw new Error(\"This item is already added to wishlist\");\r\n\r\n    if (!item.hasOwnProperty(\"price\"))\r\n      throw new Error(\"You must pass a `price` for new items\");\r\n\r\n    \r\n    const payload = item;\r\n\r\n    dispatch({ type: \"ADD_ITEM\", payload });\r\n\r\n    onItemAdd && onItemAdd(payload);\r\n\r\n    return;\r\n  \r\n  };\r\n\r\n  const removeWishlistItem = (id: Item[\"id\"]) => {\r\n    if (!id) return;\r\n\r\n    dispatch({ type: \"REMOVE_ITEM\", id });\r\n\r\n    onItemRemove && onItemRemove(id);\r\n  };\r\n\r\n  const emptyWishlist = () =>\r\n    dispatch({\r\n      type: \"EMPTY_WISHLIST\",\r\n    });\r\n\r\n  const getWishlistItem = (id: Item[\"id\"]) =>\r\n    state.items.find((i: Item) => i.id === id);\r\n\r\n  const inWishlist = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\r\n\r\n  const clearWishlistMetadata = () => {\r\n    dispatch({\r\n      type: \"CLEAR_WISHLIST_META\",\r\n    });\r\n  };\r\n\r\n  const setWishlistMetadata = (metadata: Metadata) => {\r\n    if (!metadata) return;\r\n\r\n    dispatch({\r\n      type: \"SET_WISHLIST_META\",\r\n      payload: metadata,\r\n    });\r\n  };\r\n\r\n  const updateWishlistMetadata = (metadata: Metadata) => {\r\n    if (!metadata) return;\r\n\r\n    dispatch({\r\n      type: \"UPDATE_WISHLIST_META\",\r\n      payload: metadata,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WishlistContext.Provider\r\n      value={{\r\n        ...state,\r\n        getWishlistItem,\r\n        inWishlist,\r\n        setWishlistItems,\r\n        addWishlistItem,\r\n        removeWishlistItem,\r\n        emptyWishlist,\r\n        clearWishlistMetadata,\r\n        setWishlistMetadata,\r\n        updateWishlistMetadata,\r\n      }}\r\n    >\r\n      {children}\r\n    </WishlistContext.Provider>\r\n  );\r\n};\r\n"],"names":["useLocalStorage","key","initialValue","React","window","localStorage","getItem","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","console","log","initialState","items","isWishlistEmpty","totalWishlistItems","wishlistTotal","metadata","WishlistContext","createWishlistIdentifier","len","Array","map","Math","random","toString","join","reducer","state","action","type","generateWishlistState","payload","tempItems","push","filter","i","id","Error","length","calculateItemTotals","calculateTotal","item","itemTotal","price","reduce","total","children","wishlistId","defaultItems","onSetItems","onItemAdd","onItemRemove","storage","JSON","stringify","saveWishlist","parse","dispatch","Provider","getWishlistItem","find","inWishlist","some","setWishlistItems","addWishlistItem","hasOwnProperty","removeWishlistItem","emptyWishlist","clearWishlistMetadata","setWishlistMetadata","updateWishlistMetadata","context"],"mappings":"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"}
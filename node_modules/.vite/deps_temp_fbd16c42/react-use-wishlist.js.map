{
  "version": 3,
  "sources": ["../../react-use-wishlist/src/useLocalStorage.ts", "../../react-use-wishlist/src/index.tsx"],
  "sourcesContent": ["import * as React from \"react\";\r\n\r\nexport default function useLocalStorage(\r\n  key: string,\r\n  initialValue: string\r\n): [string, (value: Function | string) => void] {\r\n  const [storedValue, setStoredValue] = React.useState(() => {\r\n    try {\r\n      const item =\r\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\r\n\r\n      return item ? item : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value: Function | string) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n\r\n      setStoredValue(valueToStore);\r\n\r\n      window.localStorage.setItem(key, valueToStore);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n", "import * as React from \"react\";\r\n\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nexport interface Item {\r\n  id: string;\r\n  price: number;\r\n  itemTotal?: number;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface InitialState {\r\n  id: string;\r\n  items: Item[];\r\n  isWishlistEmpty: boolean;\r\n  totalWishlistItems: number;\r\n  wishlistTotal: number;\r\n  metadata?: Metadata;\r\n}\r\n\r\nexport interface Metadata {\r\n  [key: string]: any;\r\n}\r\n\r\ninterface WishlistProviderState extends InitialState {\r\n  addWishlistItem: (item: Item) => void;\r\n  removeWishlistItem: (id: Item[\"id\"]) => void;\r\n  setWishlistItems: (items: Item[]) => void;\r\n  emptyWishlist: () => void;\r\n  getWishlistItem: (id: Item[\"id\"]) => any | undefined;\r\n  inWishlist: (id: Item[\"id\"]) => boolean;\r\n  clearWishlistMetadata: () => void;\r\n  setWishlistMetadata: (metadata: Metadata) => void;\r\n  updateWishlistMetadata: (metadata: Metadata) => void;\r\n}\r\n\r\nexport type Actions =\r\n  | { type: \"SET_ITEMS\"; payload: Item[] }\r\n  | { type: \"ADD_ITEM\"; payload: Item }\r\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\r\n  | { type: \"EMPTY_WISHLIST\" }\r\n  | { type: \"CLEAR_WISHLIST_META\" }\r\n  | { type: \"SET_WISHLIST_META\"; payload: Metadata }\r\n  | { type: \"UPDATE_WISHLIST_META\"; payload: Metadata };\r\n\r\nexport const initialState: any = {\r\n  items: [],\r\n  isWishlistEmpty: true,\r\n  totalWishlistItems: 0,\r\n  wishlistTotal: 0,\r\n  metadata: {},\r\n};\r\n\r\nconst WishlistContext = React.createContext<WishlistProviderState | undefined>(\r\n  initialState\r\n);\r\n\r\nexport const createWishlistIdentifier = (len = 12) =>\r\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\r\n\r\nexport const useWishlist = () => {\r\n  const context = React.useContext(WishlistContext);\r\n\r\n  if (!context) throw new Error(\"Expected to be wrapped in a WishlistProvider\");\r\n\r\n  return context;\r\n};\r\n\r\nfunction reducer(state: WishlistProviderState, action: Actions) {\r\n  switch (action.type) {\r\n    case \"SET_ITEMS\":\r\n      return generateWishlistState(state, action.payload);\r\n\r\n    case \"ADD_ITEM\": {\r\n      var tempItems = state.items;\r\n      tempItems.push(action.payload);\r\n      const items = tempItems;\r\n\r\n      return generateWishlistState(state, items);\r\n    }\r\n\r\n    case \"REMOVE_ITEM\": {\r\n      const items = state.items.filter((i: Item) => i.id !== action.id);\r\n\r\n      return generateWishlistState(state, items);\r\n    }\r\n\r\n    case \"EMPTY_WISHLIST\":\r\n      return initialState;\r\n\r\n    case \"CLEAR_WISHLIST_META\":\r\n      return {\r\n        ...state,\r\n        metadata: {},\r\n      };\r\n\r\n    case \"SET_WISHLIST_META\":\r\n      return {\r\n        ...state,\r\n        metadata: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case \"UPDATE_WISHLIST_META\":\r\n      return {\r\n        ...state,\r\n        metadata: {\r\n          ...state.metadata,\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    default:\r\n      throw new Error(\"No action specified\");\r\n  }\r\n}\r\n\r\nconst generateWishlistState = (state = initialState, items: Item[]) => {\r\n  const totalWishlistItems = items.length;\r\n  const isWishlistEmpty = totalWishlistItems === 0;\r\n\r\n  return {\r\n    ...initialState,\r\n    ...state,\r\n    items: calculateItemTotals(items),\r\n    totalWishlistItems,\r\n    wishlistTotal: calculateTotal(items),\r\n    isWishlistEmpty,\r\n  };\r\n};\r\n\r\nconst calculateItemTotals = (items: Item[]) =>\r\n  items.map(item => ({\r\n    ...item,\r\n    itemTotal: item.price,\r\n  }));\r\n\r\nconst calculateTotal = (items: Item[]) =>\r\n  items.reduce((total, item) => total + item.price, 0);\r\n\r\nexport const WishlistProvider: React.FC<{\r\n  children?: React.ReactNode;\r\n  id?: string;\r\n  defaultItems?: Item[];\r\n  onSetItems?: (items: Item[]) => void;\r\n  onItemAdd?: (payload: Item) => void;\r\n  onItemRemove?: (id: Item[\"id\"]) => void;\r\n  storage?: (\r\n    key: string,\r\n    initialValue: string\r\n  ) => [string, (value: Function | string) => void];\r\n  metadata?: Metadata;\r\n}> = ({\r\n  children,\r\n  id: wishlistId,\r\n  defaultItems = [],\r\n  onSetItems,\r\n  onItemAdd,\r\n  onItemRemove,\r\n  storage = useLocalStorage,\r\n  metadata,\r\n}) => {\r\n  const id = wishlistId ? wishlistId : createWishlistIdentifier();\r\n\r\n  const [savedWishlist, saveWishlist] = storage(\r\n    wishlistId ? `react-use-wishlist-${id}` : `react-use-wishlist`,\r\n    JSON.stringify({\r\n      id,\r\n      ...initialState,\r\n      items: defaultItems,\r\n      metadata,\r\n    })\r\n  );\r\n\r\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedWishlist));\r\n  React.useEffect(() => {\r\n    saveWishlist(JSON.stringify(state));\r\n  }, [state, saveWishlist]);\r\n\r\n  const setWishlistItems = (items: Item[]) => {\r\n    dispatch({\r\n      type: \"SET_ITEMS\",\r\n      payload: items.map(item => (item)),\r\n    });\r\n\r\n    onSetItems && onSetItems(items);\r\n  };\r\n\r\n  const addWishlistItem = (item: Item) => {\r\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\r\n\r\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\r\n\r\n    if (currentItem)\r\n      throw new Error(\"This item is already added to wishlist\");\r\n\r\n    if (!item.hasOwnProperty(\"price\"))\r\n      throw new Error(\"You must pass a `price` for new items\");\r\n\r\n    \r\n    const payload = item;\r\n\r\n    dispatch({ type: \"ADD_ITEM\", payload });\r\n\r\n    onItemAdd && onItemAdd(payload);\r\n\r\n    return;\r\n  \r\n  };\r\n\r\n  const removeWishlistItem = (id: Item[\"id\"]) => {\r\n    if (!id) return;\r\n\r\n    dispatch({ type: \"REMOVE_ITEM\", id });\r\n\r\n    onItemRemove && onItemRemove(id);\r\n  };\r\n\r\n  const emptyWishlist = () =>\r\n    dispatch({\r\n      type: \"EMPTY_WISHLIST\",\r\n    });\r\n\r\n  const getWishlistItem = (id: Item[\"id\"]) =>\r\n    state.items.find((i: Item) => i.id === id);\r\n\r\n  const inWishlist = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\r\n\r\n  const clearWishlistMetadata = () => {\r\n    dispatch({\r\n      type: \"CLEAR_WISHLIST_META\",\r\n    });\r\n  };\r\n\r\n  const setWishlistMetadata = (metadata: Metadata) => {\r\n    if (!metadata) return;\r\n\r\n    dispatch({\r\n      type: \"SET_WISHLIST_META\",\r\n      payload: metadata,\r\n    });\r\n  };\r\n\r\n  const updateWishlistMetadata = (metadata: Metadata) => {\r\n    if (!metadata) return;\r\n\r\n    dispatch({\r\n      type: \"UPDATE_WISHLIST_META\",\r\n      payload: metadata,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WishlistContext.Provider\r\n      value={{\r\n        ...state,\r\n        getWishlistItem,\r\n        inWishlist,\r\n        setWishlistItems,\r\n        addWishlistItem,\r\n        removeWishlistItem,\r\n        emptyWishlist,\r\n        clearWishlistMetadata,\r\n        setWishlistMetadata,\r\n        updateWishlistMetadata,\r\n      }}\r\n    >\r\n      {children}\r\n    </WishlistContext.Provider>\r\n  );\r\n};\r\n"],
  "mappings": "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",
  "names": ["useLocalStorage", "key", "initialValue", "React", "item", "window", "localStorage", "getItem", "error", "storedValue", "setStoredValue", "setValue", "value", "valueToStore", "Function", "setItem", "console", "log", "initialState", "items", "isWishlistEmpty", "totalWishlistItems", "wishlistTotal", "metadata", "WishlistContext", "createWishlistIdentifier", "len", "Array", "map", "Math", "random", "toString", "join", "useWishlist", "context", "Error", "reducer", "state", "action", "type", "generateWishlistState", "payload", "tempItems", "push", "filter", "i", "id", "length", "calculateItemTotals", "calculateTotal", "itemTotal", "price", "reduce", "total", "WishlistProvider", "children", "wishlistId", "defaultItems", "onSetItems", "onItemAdd", "onItemRemove", "storage", "JSON", "stringify", "savedWishlist", "saveWishlist", "parse", "dispatch", "setWishlistItems", "addWishlistItem", "currentItem", "find", "hasOwnProperty", "removeWishlistItem", "emptyWishlist", "getWishlistItem", "inWishlist", "some", "clearWishlistMetadata", "setWishlistMetadata", "updateWishlistMetadata", "Provider"]
}
